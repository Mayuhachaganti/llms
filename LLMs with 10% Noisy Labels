{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":2415872,"sourceType":"datasetVersion","datasetId":1461623}],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Amazon Reviews Modelling Using BERT with Noisy Labels","metadata":{}},{"cell_type":"markdown","source":"# 1. Install and Import Necessary Libray For NLP and Sentiment Analysis","metadata":{}},{"cell_type":"code","source":"%%capture\n!pip install stopwords\n!pip install flair\n!pip install nltk\n!pip install swifter","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:17:19.293976Z","iopub.execute_input":"2024-06-26T18:17:19.294293Z","iopub.status.idle":"2024-06-26T18:17:56.761748Z","shell.execute_reply.started":"2024-06-26T18:17:19.294247Z","shell.execute_reply":"2024-06-26T18:17:56.760637Z"},"trusted":true},"execution_count":140,"outputs":[]},{"cell_type":"code","source":"!pip install --upgrade pyarrow","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:17:56.764078Z","iopub.execute_input":"2024-06-26T18:17:56.764764Z","iopub.status.idle":"2024-06-26T18:18:06.652646Z","shell.execute_reply.started":"2024-06-26T18:17:56.764721Z","shell.execute_reply":"2024-06-26T18:18:06.651872Z"},"trusted":true},"execution_count":141,"outputs":[{"name":"stdout","text":"Requirement already satisfied: pyarrow in /opt/conda/lib/python3.7/site-packages (12.0.1)\nRequirement already satisfied: numpy>=1.16.6 in /opt/conda/lib/python3.7/site-packages (from pyarrow) (1.20.3)\n\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\n","output_type":"stream"}]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport re\nimport nltk\nfrom nltk.corpus import stopwords\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\nimport random as rn\nimport seaborn as sns\nfrom plotly import graph_objs as go\nimport plotly.express as px\nimport plotly.figure_factory as ff\nfrom collections import Counter\nfrom PIL import Image\n\nfrom imblearn.over_sampling import RandomOverSampler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfTransformer\n\npd.options.display.max_rows = None\nseed=40","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:06.654127Z","iopub.execute_input":"2024-06-26T18:18:06.654351Z","iopub.status.idle":"2024-06-26T18:18:06.662696Z","shell.execute_reply.started":"2024-06-26T18:18:06.654324Z","shell.execute_reply":"2024-06-26T18:18:06.661903Z"},"trusted":true},"execution_count":142,"outputs":[]},{"cell_type":"markdown","source":" ","metadata":{}},{"cell_type":"markdown","source":"# 2. Import Amazon Reviews Dataset","metadata":{}},{"cell_type":"markdown","source":"### Taking 10% of the data to analyze and to be trained.","metadata":{}},{"cell_type":"code","source":"rn.seed(a=40)\n\nreview = pd.read_csv('../input/amazon-product-reviews/Reviews.csv')\nreview.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:06.664684Z","iopub.execute_input":"2024-06-26T18:18:06.664951Z","iopub.status.idle":"2024-06-26T18:18:10.100215Z","shell.execute_reply.started":"2024-06-26T18:18:06.664917Z","shell.execute_reply":"2024-06-26T18:18:10.099429Z"},"trusted":true},"execution_count":143,"outputs":[{"execution_count":143,"output_type":"execute_result","data":{"text/plain":"(568454, 10)"},"metadata":{}}]},{"cell_type":"code","source":"review.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.101169Z","iopub.execute_input":"2024-06-26T18:18:10.101365Z","iopub.status.idle":"2024-06-26T18:18:10.116290Z","shell.execute_reply.started":"2024-06-26T18:18:10.101340Z","shell.execute_reply":"2024-06-26T18:18:10.115598Z"},"trusted":true},"execution_count":144,"outputs":[{"execution_count":144,"output_type":"execute_result","data":{"text/plain":"   Id   ProductId          UserId                      ProfileName  \\\n0   1  B001E4KFG0  A3SGXH7AUHU8GW                       delmartian   \n1   2  B00813GRG4  A1D87F6ZCVE5NK                           dll pa   \n2   3  B000LQOCH0   ABXLMWJIXXAIN  Natalia Corres \"Natalia Corres\"   \n3   4  B000UA0QIQ  A395BORC6FGVXV                             Karl   \n4   5  B006K2ZZ7K  A1UQRSCLF8GW1T    Michael D. Bigham \"M. Wassir\"   \n\n   HelpfulnessNumerator  HelpfulnessDenominator  Score        Time  \\\n0                     1                       1      5  1303862400   \n1                     0                       0      1  1346976000   \n2                     1                       1      4  1219017600   \n3                     3                       3      2  1307923200   \n4                     0                       0      5  1350777600   \n\n                 Summary                                               Text  \n0  Good Quality Dog Food  I have bought several of the Vitality canned d...  \n1      Not as Advertised  Product arrived labeled as Jumbo Salted Peanut...  \n2  \"Delight\" says it all  This is a confection that has been around a fe...  \n3         Cough Medicine  If you are looking for the secret ingredient i...  \n4            Great taffy  Great taffy at a great price.  There was a wid...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>ProductId</th>\n      <th>UserId</th>\n      <th>ProfileName</th>\n      <th>HelpfulnessNumerator</th>\n      <th>HelpfulnessDenominator</th>\n      <th>Score</th>\n      <th>Time</th>\n      <th>Summary</th>\n      <th>Text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>B001E4KFG0</td>\n      <td>A3SGXH7AUHU8GW</td>\n      <td>delmartian</td>\n      <td>1</td>\n      <td>1</td>\n      <td>5</td>\n      <td>1303862400</td>\n      <td>Good Quality Dog Food</td>\n      <td>I have bought several of the Vitality canned d...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>B00813GRG4</td>\n      <td>A1D87F6ZCVE5NK</td>\n      <td>dll pa</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1346976000</td>\n      <td>Not as Advertised</td>\n      <td>Product arrived labeled as Jumbo Salted Peanut...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>B000LQOCH0</td>\n      <td>ABXLMWJIXXAIN</td>\n      <td>Natalia Corres \"Natalia Corres\"</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1219017600</td>\n      <td>\"Delight\" says it all</td>\n      <td>This is a confection that has been around a fe...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>B000UA0QIQ</td>\n      <td>A395BORC6FGVXV</td>\n      <td>Karl</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1307923200</td>\n      <td>Cough Medicine</td>\n      <td>If you are looking for the secret ingredient i...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>B006K2ZZ7K</td>\n      <td>A1UQRSCLF8GW1T</td>\n      <td>Michael D. Bigham \"M. Wassir\"</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1350777600</td>\n      <td>Great taffy</td>\n      <td>Great taffy at a great price.  There was a wid...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### group the scores into positive and negative sentiment","metadata":{}},{"cell_type":"code","source":"def score_round(x):\n    if x>=3:\n        return 1\n    else: \n        return 0\n    \nreview['review_score']= review.Score.apply(score_round)\nreview = review.rename(columns={'Text':'review_text'})\ndf=review.copy()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.117334Z","iopub.execute_input":"2024-06-26T18:18:10.117565Z","iopub.status.idle":"2024-06-26T18:18:10.550835Z","shell.execute_reply.started":"2024-06-26T18:18:10.117537Z","shell.execute_reply":"2024-06-26T18:18:10.549994Z"},"trusted":true},"execution_count":145,"outputs":[]},{"cell_type":"code","source":"df['review_score'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.551933Z","iopub.execute_input":"2024-06-26T18:18:10.552160Z","iopub.status.idle":"2024-06-26T18:18:10.563578Z","shell.execute_reply.started":"2024-06-26T18:18:10.552131Z","shell.execute_reply":"2024-06-26T18:18:10.562873Z"},"trusted":true},"execution_count":146,"outputs":[{"execution_count":146,"output_type":"execute_result","data":{"text/plain":"1    486417\n0     82037\nName: review_score, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"zeroes=df[review['review_score']==0].head(30000)\nones=df[review['review_score']==1].head(20000)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.564642Z","iopub.execute_input":"2024-06-26T18:18:10.564884Z","iopub.status.idle":"2024-06-26T18:18:10.749754Z","shell.execute_reply.started":"2024-06-26T18:18:10.564850Z","shell.execute_reply":"2024-06-26T18:18:10.748903Z"},"trusted":true},"execution_count":147,"outputs":[]},{"cell_type":"code","source":"d=pd.concat([zeroes,ones])","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.750866Z","iopub.execute_input":"2024-06-26T18:18:10.751089Z","iopub.status.idle":"2024-06-26T18:18:10.779951Z","shell.execute_reply.started":"2024-06-26T18:18:10.751060Z","shell.execute_reply":"2024-06-26T18:18:10.779376Z"},"trusted":true},"execution_count":148,"outputs":[]},{"cell_type":"code","source":"d.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.782970Z","iopub.execute_input":"2024-06-26T18:18:10.783186Z","iopub.status.idle":"2024-06-26T18:18:10.796741Z","shell.execute_reply.started":"2024-06-26T18:18:10.783159Z","shell.execute_reply":"2024-06-26T18:18:10.796026Z"},"trusted":true},"execution_count":149,"outputs":[{"execution_count":149,"output_type":"execute_result","data":{"text/plain":"    Id   ProductId          UserId     ProfileName  HelpfulnessNumerator  \\\n1    2  B00813GRG4  A1D87F6ZCVE5NK          dll pa                     0   \n3    4  B000UA0QIQ  A395BORC6FGVXV            Karl                     3   \n12  13  B0009XLVG0   A327PCT23YH90              LT                     1   \n16  17  B001GVISJM  A3KLWF6WQ5BNYO  Erica Neathery                     0   \n26  27  B001GVISJM  A3RXAU2N8KV45G          lady21                     0   \n\n    HelpfulnessDenominator  Score        Time  \\\n1                        0      1  1346976000   \n3                        3      2  1307923200   \n12                       1      1  1339545600   \n16                       0      2  1348099200   \n26                       1      1  1332633600   \n\n                                 Summary  \\\n1                      Not as Advertised   \n3                         Cough Medicine   \n12  My Cats Are Not Fans of the New Food   \n16                            poor taste   \n26                       Nasty No flavor   \n\n                                          review_text  review_score  \n1   Product arrived labeled as Jumbo Salted Peanut...             0  \n3   If you are looking for the secret ingredient i...             0  \n12  My cats have been happily eating Felidae Plati...             0  \n16  I love eating them and they are good for watch...             0  \n26  The candy is just red , No flavor . Just  plan...             0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>ProductId</th>\n      <th>UserId</th>\n      <th>ProfileName</th>\n      <th>HelpfulnessNumerator</th>\n      <th>HelpfulnessDenominator</th>\n      <th>Score</th>\n      <th>Time</th>\n      <th>Summary</th>\n      <th>review_text</th>\n      <th>review_score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>B00813GRG4</td>\n      <td>A1D87F6ZCVE5NK</td>\n      <td>dll pa</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1346976000</td>\n      <td>Not as Advertised</td>\n      <td>Product arrived labeled as Jumbo Salted Peanut...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>B000UA0QIQ</td>\n      <td>A395BORC6FGVXV</td>\n      <td>Karl</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1307923200</td>\n      <td>Cough Medicine</td>\n      <td>If you are looking for the secret ingredient i...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>13</td>\n      <td>B0009XLVG0</td>\n      <td>A327PCT23YH90</td>\n      <td>LT</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1339545600</td>\n      <td>My Cats Are Not Fans of the New Food</td>\n      <td>My cats have been happily eating Felidae Plati...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>17</td>\n      <td>B001GVISJM</td>\n      <td>A3KLWF6WQ5BNYO</td>\n      <td>Erica Neathery</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1348099200</td>\n      <td>poor taste</td>\n      <td>I love eating them and they are good for watch...</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>27</td>\n      <td>B001GVISJM</td>\n      <td>A3RXAU2N8KV45G</td>\n      <td>lady21</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1332633600</td>\n      <td>Nasty No flavor</td>\n      <td>The candy is just red , No flavor . Just  plan...</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df['review_score'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.797905Z","iopub.execute_input":"2024-06-26T18:18:10.798157Z","iopub.status.idle":"2024-06-26T18:18:10.810925Z","shell.execute_reply.started":"2024-06-26T18:18:10.798124Z","shell.execute_reply":"2024-06-26T18:18:10.810217Z"},"trusted":true},"execution_count":150,"outputs":[{"execution_count":150,"output_type":"execute_result","data":{"text/plain":"1    486417\n0     82037\nName: review_score, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df=d.copy()\ndf=df.sample(frac=1).reset_index(drop=True)\ndf.head()\nimport pandas as pd\nimport numpy as np\nnum_rows_to_shuffle = int(0.1 * len(df))\nnp.random.seed(0)  \nindices_to_shuffle = np.random.choice(df.index[1:], size=num_rows_to_shuffle, replace=False)\n","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.811995Z","iopub.execute_input":"2024-06-26T18:18:10.812231Z","iopub.status.idle":"2024-06-26T18:18:10.868713Z","shell.execute_reply.started":"2024-06-26T18:18:10.812200Z","shell.execute_reply":"2024-06-26T18:18:10.867922Z"},"trusted":true},"execution_count":151,"outputs":[]},{"cell_type":"code","source":"len(indices_to_shuffle)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.869932Z","iopub.execute_input":"2024-06-26T18:18:10.870203Z","iopub.status.idle":"2024-06-26T18:18:10.875741Z","shell.execute_reply.started":"2024-06-26T18:18:10.870167Z","shell.execute_reply":"2024-06-26T18:18:10.875021Z"},"trusted":true},"execution_count":152,"outputs":[{"execution_count":152,"output_type":"execute_result","data":{"text/plain":"5000"},"metadata":{}}]},{"cell_type":"code","source":"d=df.copy()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.876719Z","iopub.execute_input":"2024-06-26T18:18:10.876923Z","iopub.status.idle":"2024-06-26T18:18:10.886965Z","shell.execute_reply.started":"2024-06-26T18:18:10.876898Z","shell.execute_reply":"2024-06-26T18:18:10.886327Z"},"trusted":true},"execution_count":153,"outputs":[]},{"cell_type":"code","source":"d['review_score'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.888023Z","iopub.execute_input":"2024-06-26T18:18:10.888315Z","iopub.status.idle":"2024-06-26T18:18:10.897340Z","shell.execute_reply.started":"2024-06-26T18:18:10.888237Z","shell.execute_reply":"2024-06-26T18:18:10.896677Z"},"trusted":true},"execution_count":154,"outputs":[{"execution_count":154,"output_type":"execute_result","data":{"text/plain":"0    30000\n1    20000\nName: review_score, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"for idx in indices_to_shuffle:\n    if df['review_score'].loc[idx]==1:\n        df.at[idx,'review_score']=0\n    elif df['review_score'].loc[idx]==0:\n        df.at[idx,'review_score']=1\n    else:\n        print('no invalid value')","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:10.898265Z","iopub.execute_input":"2024-06-26T18:18:10.898498Z","iopub.status.idle":"2024-06-26T18:18:11.129610Z","shell.execute_reply.started":"2024-06-26T18:18:10.898446Z","shell.execute_reply":"2024-06-26T18:18:11.129011Z"},"trusted":true},"execution_count":155,"outputs":[]},{"cell_type":"code","source":"df['review_score'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:11.130798Z","iopub.execute_input":"2024-06-26T18:18:11.131055Z","iopub.status.idle":"2024-06-26T18:18:11.137925Z","shell.execute_reply.started":"2024-06-26T18:18:11.131020Z","shell.execute_reply":"2024-06-26T18:18:11.137147Z"},"trusted":true},"execution_count":156,"outputs":[{"execution_count":156,"output_type":"execute_result","data":{"text/plain":"0    29008\n1    20992\nName: review_score, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"review=df.copy()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:11.138985Z","iopub.execute_input":"2024-06-26T18:18:11.139186Z","iopub.status.idle":"2024-06-26T18:18:11.168695Z","shell.execute_reply.started":"2024-06-26T18:18:11.139162Z","shell.execute_reply":"2024-06-26T18:18:11.168075Z"},"trusted":true},"execution_count":157,"outputs":[]},{"cell_type":"code","source":"# review.review_score.replace(\"positive\" , 1 , inplace = True)\n# review.review_score.replace(\"negative\" , 0 , inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:11.169812Z","iopub.execute_input":"2024-06-26T18:18:11.170087Z","iopub.status.idle":"2024-06-26T18:18:11.173646Z","shell.execute_reply.started":"2024-06-26T18:18:11.170050Z","shell.execute_reply":"2024-06-26T18:18:11.172925Z"},"trusted":true},"execution_count":158,"outputs":[]},{"cell_type":"markdown","source":"### making sure that text review data type is string","metadata":{}},{"cell_type":"code","source":"review.review_text = review.review_text.astype('str')\nreview.Summary = review.Summary.astype('str')\n","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:11.174789Z","iopub.execute_input":"2024-06-26T18:18:11.175125Z","iopub.status.idle":"2024-06-26T18:18:11.190398Z","shell.execute_reply.started":"2024-06-26T18:18:11.175089Z","shell.execute_reply":"2024-06-26T18:18:11.189809Z"},"trusted":true},"execution_count":159,"outputs":[]},{"cell_type":"markdown","source":"# 3. Analysis and Visualization","metadata":{}},{"cell_type":"markdown","source":"### Distribution of Reviews in Each Sentiment","metadata":{}},{"cell_type":"code","source":"temp = review.groupby('review_score').count()['review_text'].reset_index().sort_values(by='review_text',ascending=False)\ntemp.style.background_gradient(cmap='Purples')\n","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:11.191403Z","iopub.execute_input":"2024-06-26T18:18:11.191692Z","iopub.status.idle":"2024-06-26T18:18:11.247113Z","shell.execute_reply.started":"2024-06-26T18:18:11.191653Z","shell.execute_reply":"2024-06-26T18:18:11.246435Z"},"trusted":true},"execution_count":160,"outputs":[{"execution_count":160,"output_type":"execute_result","data":{"text/plain":"<pandas.io.formats.style.Styler at 0x797ea4711f10>","text/html":"<style type=\"text/css\">\n#T_589fd_row0_col0, #T_589fd_row1_col1 {\n  background-color: #fcfbfd;\n  color: #000000;\n}\n#T_589fd_row0_col1, #T_589fd_row1_col0 {\n  background-color: #3f007d;\n  color: #f1f1f1;\n}\n</style>\n<table id=\"T_589fd_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >review_score</th>\n      <th class=\"col_heading level0 col1\" >review_text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_589fd_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_589fd_row0_col0\" class=\"data row0 col0\" >0</td>\n      <td id=\"T_589fd_row0_col1\" class=\"data row0 col1\" >29008</td>\n    </tr>\n    <tr>\n      <th id=\"T_589fd_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n      <td id=\"T_589fd_row1_col0\" class=\"data row1 col0\" >1</td>\n      <td id=\"T_589fd_row1_col1\" class=\"data row1 col1\" >20992</td>\n    </tr>\n  </tbody>\n</table>\n"},"metadata":{}}]},{"cell_type":"code","source":"sns.set_theme(style='whitegrid')\nsns.set(rc = {'figure.figsize':(13,8)})\nsns.set_palette(\"pastel\")\nsns.countplot(x='review_score',data=review)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:11.247956Z","iopub.execute_input":"2024-06-26T18:18:11.248132Z","iopub.status.idle":"2024-06-26T18:18:11.470616Z","shell.execute_reply.started":"2024-06-26T18:18:11.248109Z","shell.execute_reply":"2024-06-26T18:18:11.469962Z"},"trusted":true},"execution_count":161,"outputs":[{"execution_count":161,"output_type":"execute_result","data":{"text/plain":"<AxesSubplot:xlabel='review_score', ylabel='count'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 936x576 with 1 Axes>","image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":"positive = review[review['review_score']==1]\nnegative = review[review['review_score']==0]","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:11.471605Z","iopub.execute_input":"2024-06-26T18:18:11.471815Z","iopub.status.idle":"2024-06-26T18:18:11.488095Z","shell.execute_reply.started":"2024-06-26T18:18:11.471785Z","shell.execute_reply":"2024-06-26T18:18:11.487404Z"},"trusted":true},"execution_count":162,"outputs":[]},{"cell_type":"markdown","source":"# 4. Data Cleaning For Sentiment Processing","metadata":{}},{"cell_type":"code","source":"from nltk.corpus import stopwords\nfrom nltk import WordNetLemmatizer\nnltk.download('stopwords')\nfrom nltk.stem import PorterStemmer","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:11.619058Z","iopub.execute_input":"2024-06-26T18:18:11.619324Z","iopub.status.idle":"2024-06-26T18:18:11.837419Z","shell.execute_reply.started":"2024-06-26T18:18:11.619287Z","shell.execute_reply":"2024-06-26T18:18:11.836779Z"},"trusted":true},"execution_count":164,"outputs":[{"name":"stdout","text":"[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n","output_type":"stream"}]},{"cell_type":"markdown","source":"### Null values Cleaning","metadata":{}},{"cell_type":"code","source":"review.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:11.838626Z","iopub.execute_input":"2024-06-26T18:18:11.838886Z","iopub.status.idle":"2024-06-26T18:18:11.880728Z","shell.execute_reply.started":"2024-06-26T18:18:11.838851Z","shell.execute_reply":"2024-06-26T18:18:11.879921Z"},"trusted":true},"execution_count":165,"outputs":[{"execution_count":165,"output_type":"execute_result","data":{"text/plain":"Id                        0\nProductId                 0\nUserId                    0\nProfileName               2\nHelpfulnessNumerator      0\nHelpfulnessDenominator    0\nScore                     0\nTime                      0\nSummary                   0\nreview_text               0\nreview_score              0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"### the missing values are only in profile name feature,which is ignored as it is not required.","metadata":{}},{"cell_type":"markdown","source":"### Duplicate Values Removing","metadata":{}},{"cell_type":"code","source":"review = review.drop_duplicates(keep='first')","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:11.881782Z","iopub.execute_input":"2024-06-26T18:18:11.882032Z","iopub.status.idle":"2024-06-26T18:18:12.014274Z","shell.execute_reply.started":"2024-06-26T18:18:11.881991Z","shell.execute_reply":"2024-06-26T18:18:12.013681Z"},"trusted":true},"execution_count":166,"outputs":[]},{"cell_type":"code","source":"review.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.018489Z","iopub.execute_input":"2024-06-26T18:18:12.018718Z","iopub.status.idle":"2024-06-26T18:18:12.023806Z","shell.execute_reply.started":"2024-06-26T18:18:12.018690Z","shell.execute_reply":"2024-06-26T18:18:12.023071Z"},"trusted":true},"execution_count":167,"outputs":[{"execution_count":167,"output_type":"execute_result","data":{"text/plain":"(50000, 11)"},"metadata":{}}]},{"cell_type":"markdown","source":"### function to clean some basic characters","metadata":{}},{"cell_type":"code","source":"def clean(raw):\n    \"\"\" Remove hyperlinks and markup \"\"\"\n    result = re.sub(\"<[a][^>]*>(.+?)</[a]>\", 'Link.', raw)\n    result = re.sub('&gt;', \"\", result)\n    result = re.sub('&#x27;', \"'\", result)\n    result = re.sub('&quot;', '\"', result)\n    result = re.sub('&#x2F;', ' ', result)\n    result = re.sub('<p>', ' ', result)\n    result = re.sub('</i>', '', result)\n    result = re.sub('&#62;', '', result)\n    result = re.sub('<i>', ' ', result)\n    result = re.sub(\"\\n\", '', result)\n    return result","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.024810Z","iopub.execute_input":"2024-06-26T18:18:12.025031Z","iopub.status.idle":"2024-06-26T18:18:12.032611Z","shell.execute_reply.started":"2024-06-26T18:18:12.025005Z","shell.execute_reply":"2024-06-26T18:18:12.031872Z"},"trusted":true},"execution_count":168,"outputs":[]},{"cell_type":"markdown","source":"### function to remove numeric","metadata":{}},{"cell_type":"code","source":"def remove_num(texts):\n   output = re.sub(r'\\d+', '', texts)\n   return output","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.033436Z","iopub.execute_input":"2024-06-26T18:18:12.033706Z","iopub.status.idle":"2024-06-26T18:18:12.041854Z","shell.execute_reply.started":"2024-06-26T18:18:12.033680Z","shell.execute_reply":"2024-06-26T18:18:12.041175Z"},"trusted":true},"execution_count":169,"outputs":[]},{"cell_type":"markdown","source":"### function to remove emoji","metadata":{}},{"cell_type":"code","source":"def deEmojify(x):\n    regrex_pattern = re.compile(pattern = \"[\"\n        u\"\\U0001F600-\\U0001F64F\"  # emoticons\n        u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n        u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n        u\"\\U0001F1E0-\\U0001F1FF\"  # flags (iOS)\n                           \"]+\", flags = re.UNICODE)\n    return regrex_pattern.sub(r'', x)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.042727Z","iopub.execute_input":"2024-06-26T18:18:12.042928Z","iopub.status.idle":"2024-06-26T18:18:12.050604Z","shell.execute_reply.started":"2024-06-26T18:18:12.042904Z","shell.execute_reply":"2024-06-26T18:18:12.050028Z"},"trusted":true},"execution_count":170,"outputs":[]},{"cell_type":"markdown","source":"### function to unify whitespaces","metadata":{}},{"cell_type":"code","source":"def unify_whitespaces(x):\n    cleaned_string = re.sub(' +', ' ', x)\n    return cleaned_string ","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.051528Z","iopub.execute_input":"2024-06-26T18:18:12.051732Z","iopub.status.idle":"2024-06-26T18:18:12.059844Z","shell.execute_reply.started":"2024-06-26T18:18:12.051707Z","shell.execute_reply":"2024-06-26T18:18:12.059248Z"},"trusted":true},"execution_count":171,"outputs":[]},{"cell_type":"markdown","source":"### function to remove symbols","metadata":{}},{"cell_type":"code","source":"def remove_symbols(x):\n    cleaned_string = re.sub(r\"[^a-zA-Z0-9?!.,]+\", ' ', x)\n    return cleaned_string","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.060793Z","iopub.execute_input":"2024-06-26T18:18:12.061008Z","iopub.status.idle":"2024-06-26T18:18:12.069899Z","shell.execute_reply.started":"2024-06-26T18:18:12.060983Z","shell.execute_reply":"2024-06-26T18:18:12.069228Z"},"trusted":true},"execution_count":172,"outputs":[]},{"cell_type":"markdown","source":"### function to remove punctuation","metadata":{}},{"cell_type":"code","source":"def remove_punctuation(text):\n    final = \"\".join(u for u in text if u not in (\"?\", \".\", \";\", \":\",  \"!\",'\"',','))\n    return final","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.070787Z","iopub.execute_input":"2024-06-26T18:18:12.070996Z","iopub.status.idle":"2024-06-26T18:18:12.078967Z","shell.execute_reply.started":"2024-06-26T18:18:12.070971Z","shell.execute_reply":"2024-06-26T18:18:12.078297Z"},"trusted":true},"execution_count":173,"outputs":[]},{"cell_type":"markdown","source":"### function to remove stopwords","metadata":{}},{"cell_type":"code","source":"stop=set(stopwords.words(\"english\"))\nstemmer=PorterStemmer()\nlemma=WordNetLemmatizer()\n\ndef remove_stopword(text):\n   text=[word.lower() for word in text.split() if word.lower() not in stop]\n   return \" \".join(text)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.080058Z","iopub.execute_input":"2024-06-26T18:18:12.080258Z","iopub.status.idle":"2024-06-26T18:18:12.092267Z","shell.execute_reply.started":"2024-06-26T18:18:12.080233Z","shell.execute_reply":"2024-06-26T18:18:12.091727Z"},"trusted":true},"execution_count":174,"outputs":[]},{"cell_type":"markdown","source":"### function to use stemming to normalize words","metadata":{}},{"cell_type":"code","source":"from nltk.corpus import stopwords\nfrom nltk.stem import SnowballStemmer\ndef Stemming(text):\n   stem=[]\n   stopword = stopwords.words('english')\n   snowball_stemmer = SnowballStemmer('english')\n   word_tokens = nltk.word_tokenize(text)\n   stemmed_word = [snowball_stemmer.stem(word) for word in word_tokens]\n   stem=' '.join(stemmed_word)\n   return stem","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.093148Z","iopub.execute_input":"2024-06-26T18:18:12.093343Z","iopub.status.idle":"2024-06-26T18:18:12.101435Z","shell.execute_reply.started":"2024-06-26T18:18:12.093319Z","shell.execute_reply":"2024-06-26T18:18:12.100819Z"},"trusted":true},"execution_count":175,"outputs":[]},{"cell_type":"markdown","source":"### combine all the cleaning functions","metadata":{}},{"cell_type":"code","source":"def cleaning(df,review):\n    df[review] = df[review].apply(clean)\n    df[review] = df[review].apply(deEmojify)\n    df[review] = df[review].str.lower()\n    df[review] = df[review].apply(remove_num)\n    df[review] = df[review].apply(remove_symbols)\n    df[review] = df[review].apply(remove_punctuation)\n    df[review] = df[review].apply(remove_stopword)\n    df[review] = df[review].apply(unify_whitespaces)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.102257Z","iopub.execute_input":"2024-06-26T18:18:12.102469Z","iopub.status.idle":"2024-06-26T18:18:12.111396Z","shell.execute_reply.started":"2024-06-26T18:18:12.102431Z","shell.execute_reply":"2024-06-26T18:18:12.110814Z"},"trusted":true},"execution_count":176,"outputs":[]},{"cell_type":"code","source":"cleaning(review,'review_text')","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:12.112236Z","iopub.execute_input":"2024-06-26T18:18:12.112449Z","iopub.status.idle":"2024-06-26T18:18:25.543051Z","shell.execute_reply.started":"2024-06-26T18:18:12.112411Z","shell.execute_reply":"2024-06-26T18:18:25.542410Z"},"trusted":true},"execution_count":177,"outputs":[]},{"cell_type":"code","source":"review.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:25.544182Z","iopub.execute_input":"2024-06-26T18:18:25.544412Z","iopub.status.idle":"2024-06-26T18:18:25.587317Z","shell.execute_reply.started":"2024-06-26T18:18:25.544384Z","shell.execute_reply":"2024-06-26T18:18:25.586698Z"},"trusted":true},"execution_count":178,"outputs":[{"execution_count":178,"output_type":"execute_result","data":{"text/plain":"Id                        0\nProductId                 0\nUserId                    0\nProfileName               2\nHelpfulnessNumerator      0\nHelpfulnessDenominator    0\nScore                     0\nTime                      0\nSummary                   0\nreview_text               0\nreview_score              0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"review[['review_text']].head(20)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:25.588282Z","iopub.execute_input":"2024-06-26T18:18:25.588725Z","iopub.status.idle":"2024-06-26T18:18:25.599154Z","shell.execute_reply.started":"2024-06-26T18:18:25.588694Z","shell.execute_reply":"2024-06-26T18:18:25.598498Z"},"trusted":true},"execution_count":179,"outputs":[{"execution_count":179,"output_type":"execute_result","data":{"text/plain":"                                          review_text\n0   dog loves treats really helped arthritis reord...\n1   admit love tea put splenda taste wonderful pro...\n2   moo tubes arrived different size much smaller ...\n3   got product husband beause loves dr pepper cam...\n4   defintely tasty madhouse munchies family favor...\n5   crackers broken crumbs felt like completly was...\n6   disappointed product eligible return items rec...\n7   previous reviewer mentioned chocolate chips sp...\n8   tea favorite family years difficult find local...\n9   purchased food upon recommendation vet told pr...\n10  comvita umf lable new zealand showed lable sen...\n11  tomatoes sounded great additives preservatives...\n12  zero star rating guess rarely write reviews wa...\n13  wanted try product see buzz hour energy drinks...\n14  sprout seed mix arrived promptly great conditi...\n15  sure good something tastes distinctly like amonia\n16  looking mcvitie digestive biscuits many local ...\n17  dachshund recently needed start taking pills t...\n18  think ok far using peanut butter better peanut...\n19  something tasting grandma coffee cake twice la...","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>review_text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>dog loves treats really helped arthritis reord...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>admit love tea put splenda taste wonderful pro...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>moo tubes arrived different size much smaller ...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>got product husband beause loves dr pepper cam...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>defintely tasty madhouse munchies family favor...</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>crackers broken crumbs felt like completly was...</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>disappointed product eligible return items rec...</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>previous reviewer mentioned chocolate chips sp...</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>tea favorite family years difficult find local...</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>purchased food upon recommendation vet told pr...</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>comvita umf lable new zealand showed lable sen...</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>tomatoes sounded great additives preservatives...</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>zero star rating guess rarely write reviews wa...</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>wanted try product see buzz hour energy drinks...</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>sprout seed mix arrived promptly great conditi...</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>sure good something tastes distinctly like amonia</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>looking mcvitie digestive biscuits many local ...</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>dachshund recently needed start taking pills t...</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>think ok far using peanut butter better peanut...</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>something tasting grandma coffee cake twice la...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### All the cleanings are done.visualizing the common words distribution of the review texts.","metadata":{}},{"cell_type":"code","source":"review_vis2 = review.copy()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:25.600093Z","iopub.execute_input":"2024-06-26T18:18:25.600322Z","iopub.status.idle":"2024-06-26T18:18:25.715031Z","shell.execute_reply.started":"2024-06-26T18:18:25.600280Z","shell.execute_reply":"2024-06-26T18:18:25.714495Z"},"trusted":true},"execution_count":180,"outputs":[]},{"cell_type":"code","source":"review_vis2['temp_list'] = review_vis2['review_text'].apply(lambda x:str(x).split())\ntop = Counter([item for sublist in review_vis2['temp_list'] for item in sublist])\ntemp = pd.DataFrame(top.most_common(20))\ntemp.columns = ['Common_words','count']\ntemp.style.background_gradient(cmap='Blues')","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:25.716552Z","iopub.execute_input":"2024-06-26T18:18:25.716736Z","iopub.status.idle":"2024-06-26T18:18:26.355919Z","shell.execute_reply.started":"2024-06-26T18:18:25.716712Z","shell.execute_reply":"2024-06-26T18:18:26.355231Z"},"trusted":true},"execution_count":181,"outputs":[{"execution_count":181,"output_type":"execute_result","data":{"text/plain":"<pandas.io.formats.style.Styler at 0x797df6c2ef50>","text/html":"<style type=\"text/css\">\n#T_a6e00_row0_col1 {\n  background-color: #08306b;\n  color: #f1f1f1;\n}\n#T_a6e00_row1_col1 {\n  background-color: #aed1e7;\n  color: #000000;\n}\n#T_a6e00_row2_col1 {\n  background-color: #d4e4f4;\n  color: #000000;\n}\n#T_a6e00_row3_col1 {\n  background-color: #d6e6f4;\n  color: #000000;\n}\n#T_a6e00_row4_col1 {\n  background-color: #d7e6f5;\n  color: #000000;\n}\n#T_a6e00_row5_col1 {\n  background-color: #d8e7f5;\n  color: #000000;\n}\n#T_a6e00_row6_col1 {\n  background-color: #dbe9f6;\n  color: #000000;\n}\n#T_a6e00_row7_col1 {\n  background-color: #dfebf7;\n  color: #000000;\n}\n#T_a6e00_row8_col1 {\n  background-color: #e5eff9;\n  color: #000000;\n}\n#T_a6e00_row9_col1 {\n  background-color: #e7f0fa;\n  color: #000000;\n}\n#T_a6e00_row10_col1 {\n  background-color: #eff6fc;\n  color: #000000;\n}\n#T_a6e00_row11_col1 {\n  background-color: #f0f6fd;\n  color: #000000;\n}\n#T_a6e00_row12_col1 {\n  background-color: #f1f7fd;\n  color: #000000;\n}\n#T_a6e00_row13_col1 {\n  background-color: #f3f8fe;\n  color: #000000;\n}\n#T_a6e00_row14_col1, #T_a6e00_row15_col1 {\n  background-color: #f5f9fe;\n  color: #000000;\n}\n#T_a6e00_row16_col1, #T_a6e00_row17_col1 {\n  background-color: #f6faff;\n  color: #000000;\n}\n#T_a6e00_row18_col1, #T_a6e00_row19_col1 {\n  background-color: #f7fbff;\n  color: #000000;\n}\n</style>\n<table id=\"T_a6e00_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Common_words</th>\n      <th class=\"col_heading level0 col1\" >count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_a6e00_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_a6e00_row0_col0\" class=\"data row0 col0\" >br</td>\n      <td id=\"T_a6e00_row0_col1\" class=\"data row0 col1\" >61752</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n      <td id=\"T_a6e00_row1_col0\" class=\"data row1 col0\" >like</td>\n      <td id=\"T_a6e00_row1_col1\" class=\"data row1 col1\" >25282</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n      <td id=\"T_a6e00_row2_col0\" class=\"data row2 col0\" >taste</td>\n      <td id=\"T_a6e00_row2_col1\" class=\"data row2 col1\" >17426</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n      <td id=\"T_a6e00_row3_col0\" class=\"data row3 col0\" >product</td>\n      <td id=\"T_a6e00_row3_col1\" class=\"data row3 col1\" >16776</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n      <td id=\"T_a6e00_row4_col0\" class=\"data row4 col0\" >one</td>\n      <td id=\"T_a6e00_row4_col1\" class=\"data row4 col1\" >16409</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n      <td id=\"T_a6e00_row5_col0\" class=\"data row5 col0\" >coffee</td>\n      <td id=\"T_a6e00_row5_col1\" class=\"data row5 col1\" >16282</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n      <td id=\"T_a6e00_row6_col0\" class=\"data row6 col0\" >good</td>\n      <td id=\"T_a6e00_row6_col1\" class=\"data row6 col1\" >15444</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n      <td id=\"T_a6e00_row7_col0\" class=\"data row7 col0\" >would</td>\n      <td id=\"T_a6e00_row7_col1\" class=\"data row7 col1\" >14303</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n      <td id=\"T_a6e00_row8_col0\" class=\"data row8 col0\" >food</td>\n      <td id=\"T_a6e00_row8_col1\" class=\"data row8 col1\" >12691</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n      <td id=\"T_a6e00_row9_col0\" class=\"data row9 col0\" >flavor</td>\n      <td id=\"T_a6e00_row9_col1\" class=\"data row9 col1\" >12359</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n      <td id=\"T_a6e00_row10_col0\" class=\"data row10 col0\" >tea</td>\n      <td id=\"T_a6e00_row10_col1\" class=\"data row10 col1\" >9850</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n      <td id=\"T_a6e00_row11_col0\" class=\"data row11 col0\" >get</td>\n      <td id=\"T_a6e00_row11_col1\" class=\"data row11 col1\" >9821</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n      <td id=\"T_a6e00_row12_col0\" class=\"data row12 col0\" >great</td>\n      <td id=\"T_a6e00_row12_col1\" class=\"data row12 col1\" >9613</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n      <td id=\"T_a6e00_row13_col0\" class=\"data row13 col0\" >really</td>\n      <td id=\"T_a6e00_row13_col1\" class=\"data row13 col1\" >8985</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n      <td id=\"T_a6e00_row14_col0\" class=\"data row14 col0\" >much</td>\n      <td id=\"T_a6e00_row14_col1\" class=\"data row14 col1\" >8549</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n      <td id=\"T_a6e00_row15_col0\" class=\"data row15 col0\" >even</td>\n      <td id=\"T_a6e00_row15_col1\" class=\"data row15 col1\" >8418</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n      <td id=\"T_a6e00_row16_col0\" class=\"data row16 col0\" >buy</td>\n      <td id=\"T_a6e00_row16_col1\" class=\"data row16 col1\" >8099</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n      <td id=\"T_a6e00_row17_col0\" class=\"data row17 col0\" >love</td>\n      <td id=\"T_a6e00_row17_col1\" class=\"data row17 col1\" >7968</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n      <td id=\"T_a6e00_row18_col0\" class=\"data row18 col0\" >dog</td>\n      <td id=\"T_a6e00_row18_col1\" class=\"data row18 col1\" >7779</td>\n    </tr>\n    <tr>\n      <th id=\"T_a6e00_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n      <td id=\"T_a6e00_row19_col0\" class=\"data row19 col0\" >amazon</td>\n      <td id=\"T_a6e00_row19_col1\" class=\"data row19 col1\" >7726</td>\n    </tr>\n  </tbody>\n</table>\n"},"metadata":{}}]},{"cell_type":"code","source":"sns.set_theme(style=\"whitegrid\")\nsns.barplot(x=\"count\", y=\"Common_words\", data=temp)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:26.357320Z","iopub.execute_input":"2024-06-26T18:18:26.357628Z","iopub.status.idle":"2024-06-26T18:18:26.786496Z","shell.execute_reply.started":"2024-06-26T18:18:26.357591Z","shell.execute_reply":"2024-06-26T18:18:26.785836Z"},"trusted":true},"execution_count":182,"outputs":[{"execution_count":182,"output_type":"execute_result","data":{"text/plain":"<AxesSubplot:xlabel='count', ylabel='Common_words'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 936x576 with 1 Axes>","image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":"### common words are 'br','like','taste'","metadata":{}},{"cell_type":"markdown","source":"# 5. BERT Tokenizing and Modelling","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, classification_report\n\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing.text import Tokenizer\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\nfrom tensorflow.keras.losses import SparseCategoricalCrossentropy\nfrom tensorflow.keras.layers import Dense, Input\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.callbacks import ModelCheckpoint\nfrom tokenizers import BertWordPieceTokenizer\n\nimport transformers\nfrom transformers import BertTokenizer, TFBertForSequenceClassification\nfrom transformers import InputExample, InputFeatures\n\nimport logging\ntransformers.logging.set_verbosity_error()\n","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:26.787665Z","iopub.execute_input":"2024-06-26T18:18:26.787927Z","iopub.status.idle":"2024-06-26T18:18:26.796268Z","shell.execute_reply.started":"2024-06-26T18:18:26.787890Z","shell.execute_reply":"2024-06-26T18:18:26.795584Z"},"trusted":true},"execution_count":183,"outputs":[]},{"cell_type":"markdown","source":"### Split the Data to Training, Validation, and Hold-Out Data","metadata":{}},{"cell_type":"code","source":"reviews = review[\"review_text\"].values.tolist()\nlabels = review[\"review_score\"].tolist()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:26.797248Z","iopub.execute_input":"2024-06-26T18:18:26.797510Z","iopub.status.idle":"2024-06-26T18:18:26.812324Z","shell.execute_reply.started":"2024-06-26T18:18:26.797476Z","shell.execute_reply":"2024-06-26T18:18:26.811676Z"},"trusted":true},"execution_count":184,"outputs":[]},{"cell_type":"code","source":"# split the dataset into train, validation and holdout sets (60-20-20)\ntraining_sentences, test_sentences, training_labels, test_labels = train_test_split(reviews, labels, test_size=.4)\n\nvalidation_sentences, holdout_sentences, validation_labels, holdout_labels = train_test_split(test_sentences, test_labels, test_size=.5)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:26.813226Z","iopub.execute_input":"2024-06-26T18:18:26.813428Z","iopub.status.idle":"2024-06-26T18:18:26.854989Z","shell.execute_reply.started":"2024-06-26T18:18:26.813402Z","shell.execute_reply":"2024-06-26T18:18:26.854429Z"},"trusted":true},"execution_count":185,"outputs":[]},{"cell_type":"markdown","source":"### Tokenize the Input Data","metadata":{}},{"cell_type":"code","source":"tokenizer = BertTokenizer.from_pretrained('bert-base-cased')","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:26.855905Z","iopub.execute_input":"2024-06-26T18:18:26.856145Z","iopub.status.idle":"2024-06-26T18:18:27.136631Z","shell.execute_reply.started":"2024-06-26T18:18:26.856111Z","shell.execute_reply":"2024-06-26T18:18:27.135853Z"},"trusted":true},"execution_count":186,"outputs":[]},{"cell_type":"code","source":"# Example of the tokenizer output\ntokenizer([training_sentences[0]], truncation=True,\n                            padding=True, max_length=512)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:27.137753Z","iopub.execute_input":"2024-06-26T18:18:27.138015Z","iopub.status.idle":"2024-06-26T18:18:27.146022Z","shell.execute_reply.started":"2024-06-26T18:18:27.137979Z","shell.execute_reply":"2024-06-26T18:18:27.145284Z"},"trusted":true},"execution_count":187,"outputs":[{"execution_count":187,"output_type":"execute_result","data":{"text/plain":"{'input_ids': [[101, 2059, 2965, 7919, 1679, 3821, 1380, 13288, 5477, 4328, 11773, 9304, 1800, 1522, 3821, 1675, 7299, 4208, 27629, 13913, 1341, 3869, 2653, 1593, 5860, 5548, 187, 21704, 11014, 1897, 4417, 1763, 1161, 14167, 1294, 2653, 3945, 9304, 22852, 2557, 1321, 4316, 1234, 1176, 1619, 102]], 'token_type_ids': [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], 'attention_mask': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]}"},"metadata":{}}]},{"cell_type":"code","source":"review['review_score'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:27.147015Z","iopub.execute_input":"2024-06-26T18:18:27.147284Z","iopub.status.idle":"2024-06-26T18:18:27.157986Z","shell.execute_reply.started":"2024-06-26T18:18:27.147235Z","shell.execute_reply":"2024-06-26T18:18:27.157277Z"},"trusted":true},"execution_count":188,"outputs":[{"execution_count":188,"output_type":"execute_result","data":{"text/plain":"0    29008\n1    20992\nName: review_score, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# tokenize training, validation and hold-out Texts\n\ntrain_encodings = tokenizer(training_sentences,\n                            truncation=True,\n                            padding=True)\n\nvalidation_encodings = tokenizer(validation_sentences,\n                            truncation=True,\n                            padding=True)\n\nholdout_encodings = tokenizer(holdout_sentences,\n                            truncation=True,\n                            padding=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:18:27.158878Z","iopub.execute_input":"2024-06-26T18:18:27.159171Z","iopub.status.idle":"2024-06-26T18:19:51.632196Z","shell.execute_reply.started":"2024-06-26T18:18:27.159145Z","shell.execute_reply":"2024-06-26T18:19:51.631437Z"},"trusted":true},"execution_count":189,"outputs":[]},{"cell_type":"code","source":"# convert the input encodings and labels into a TensorFlow Dataset object\n\ntrain_dataset = tf.data.Dataset.from_tensor_slices((\n                            dict(train_encodings),\n                            training_labels\n                            ));\n\nvalidation_dataset = tf.data.Dataset.from_tensor_slices((\n                            dict(validation_encodings),\n                            validation_labels\n                            ));\n\nholdout_dataset = tf.data.Dataset.from_tensor_slices((\n                            dict(holdout_encodings),\n                            holdout_labels\n                            ));","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:19:51.633796Z","iopub.execute_input":"2024-06-26T18:19:51.634077Z","iopub.status.idle":"2024-06-26T18:24:40.648287Z","shell.execute_reply.started":"2024-06-26T18:19:51.634041Z","shell.execute_reply":"2024-06-26T18:24:40.647515Z"},"trusted":true},"execution_count":190,"outputs":[]},{"cell_type":"markdown","source":"## 5.3. BERT Model Fine-Tuning","metadata":{}},{"cell_type":"code","source":"# initialize our pre-trained BERT model\n\nmodel = TFBertForSequenceClassification.from_pretrained('bert-base-cased',num_labels=2)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:24:40.649534Z","iopub.execute_input":"2024-06-26T18:24:40.649767Z","iopub.status.idle":"2024-06-26T18:24:41.803276Z","shell.execute_reply.started":"2024-06-26T18:24:40.649738Z","shell.execute_reply":"2024-06-26T18:24:41.802652Z"},"trusted":true},"execution_count":191,"outputs":[]},{"cell_type":"code","source":"optimizer = tf.keras.optimizers.Adam(learning_rate=2e-5, epsilon=1e-08)\nmodel.compile(optimizer=optimizer, loss=model.compute_loss, metrics=['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:24:41.804391Z","iopub.execute_input":"2024-06-26T18:24:41.805058Z","iopub.status.idle":"2024-06-26T18:24:41.815340Z","shell.execute_reply.started":"2024-06-26T18:24:41.805026Z","shell.execute_reply":"2024-06-26T18:24:41.814647Z"},"trusted":true},"execution_count":192,"outputs":[]},{"cell_type":"code","source":"# train and fine tune our pre-trained BERT model\n\nhistory = model.fit(train_dataset.shuffle(100).batch(8),\n          epochs=3,\n          batch_size=8,\n          validation_data=validation_dataset.shuffle(100).batch(8), verbose=1)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T18:24:41.816356Z","iopub.execute_input":"2024-06-26T18:24:41.816593Z","iopub.status.idle":"2024-06-26T20:23:37.654251Z","shell.execute_reply.started":"2024-06-26T18:24:41.816566Z","shell.execute_reply":"2024-06-26T20:23:37.653593Z"},"trusted":true},"execution_count":193,"outputs":[{"name":"stdout","text":"Epoch 1/3\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.7/site-packages/tensorflow/python/autograph/impl/api.py:376: FutureWarning: The old compute_loss method is deprecated as it conflicts with the Keras compute_loss method added in TF 2.8. If you want the original HF compute_loss, please call hf_compute_loss() instead. From TF versions >= 2.8, or Transformers versions >= 5, calling compute_loss() will get the Keras method instead.\n  return py_builtins.overload_of(f)(*args)\n","output_type":"stream"},{"name":"stdout","text":"3750/3750 [==============================] - 2390s 634ms/step - loss: 0.5136 - accuracy: 0.7655 - val_loss: 0.4856 - val_accuracy: 0.7891\nEpoch 2/3\n3750/3750 [==============================] - 2373s 633ms/step - loss: 0.4208 - accuracy: 0.8326 - val_loss: 0.4952 - val_accuracy: 0.7896\nEpoch 3/3\n3750/3750 [==============================] - 2372s 633ms/step - loss: 0.3334 - accuracy: 0.8816 - val_loss: 0.5458 - val_accuracy: 0.7672\n","output_type":"stream"}]},{"cell_type":"code","source":"from matplotlib.ticker import MaxNLocator\n\n# plot train and validation accuracy\n\nax = plt.figure().gca()\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nax.xaxis.set_major_locator(MaxNLocator(integer=True))\nplt.legend(['train', 'val'], loc='upper left')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-06-26T20:23:37.655679Z","iopub.execute_input":"2024-06-26T20:23:37.656406Z","iopub.status.idle":"2024-06-26T20:23:37.911616Z","shell.execute_reply.started":"2024-06-26T20:23:37.656360Z","shell.execute_reply":"2024-06-26T20:23:37.910902Z"},"trusted":true},"execution_count":194,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 936x576 with 1 Axes>","image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":"model","metadata":{"execution":{"iopub.status.busy":"2024-06-26T20:23:37.912568Z","iopub.execute_input":"2024-06-26T20:23:37.912776Z","iopub.status.idle":"2024-06-26T20:23:37.917833Z","shell.execute_reply.started":"2024-06-26T20:23:37.912749Z","shell.execute_reply":"2024-06-26T20:23:37.917176Z"},"trusted":true},"execution_count":195,"outputs":[{"execution_count":195,"output_type":"execute_result","data":{"text/plain":"<transformers.models.bert.modeling_tf_bert.TFBertForSequenceClassification at 0x797eb53e7090>"},"metadata":{}}]},{"cell_type":"code","source":"# save the model\n\nmodel.save_pretrained(\"./output_model\")","metadata":{"execution":{"iopub.status.busy":"2024-06-26T20:23:37.918836Z","iopub.execute_input":"2024-06-26T20:23:37.919042Z","iopub.status.idle":"2024-06-26T20:23:39.404326Z","shell.execute_reply.started":"2024-06-26T20:23:37.919014Z","shell.execute_reply":"2024-06-26T20:23:39.403429Z"},"trusted":true},"execution_count":196,"outputs":[]},{"cell_type":"markdown","source":"## 5.4. BERT Model's Performance Evaluation","metadata":{}},{"cell_type":"code","source":"# load the model and then evaluate it on holdout set\n\nloaded_model = TFBertForSequenceClassification.from_pretrained(\"./output_model\")\nresult = model.evaluate(holdout_dataset.batch(8))\ndict(zip(model.metrics_names, result))","metadata":{"execution":{"iopub.status.busy":"2024-06-26T20:23:39.405942Z","iopub.execute_input":"2024-06-26T20:23:39.406227Z","iopub.status.idle":"2024-06-26T20:27:46.966619Z","shell.execute_reply.started":"2024-06-26T20:23:39.406189Z","shell.execute_reply":"2024-06-26T20:27:46.965886Z"},"trusted":true},"execution_count":197,"outputs":[{"name":"stdout","text":"1250/1250 [==============================] - 247s 197ms/step - loss: 0.5227 - accuracy: 0.7784\n","output_type":"stream"},{"execution_count":197,"output_type":"execute_result","data":{"text/plain":"{'loss': 0.5226916670799255, 'accuracy': 0.7784000039100647}"},"metadata":{}}]},{"cell_type":"markdown","source":"### the model's accuracy 77.84% on our holdout set (other validation set) on 10% noisy labels","metadata":{}},{"cell_type":"code","source":"# Then predict the sentiment for holdout set\n\ntf_output = loaded_model.predict(holdout_dataset.batch(8))\npred_label = tf.argmax(tf.nn.softmax(tf_output[\"logits\"], axis=1).numpy(), 1).numpy()","metadata":{"execution":{"iopub.status.busy":"2024-06-26T20:27:46.967844Z","iopub.execute_input":"2024-06-26T20:27:46.968536Z","iopub.status.idle":"2024-06-26T20:31:52.136107Z","shell.execute_reply.started":"2024-06-26T20:27:46.968496Z","shell.execute_reply":"2024-06-26T20:31:52.135294Z"},"trusted":true},"execution_count":198,"outputs":[]},{"cell_type":"code","source":"# After that create the confusion matrix of our predictions\n\ncm = tf.math.confusion_matrix(\n    holdout_labels, pred_label, num_classes=2, weights=None, dtype=tf.dtypes.int32,\n    name=None\n).numpy()\n\nprint(\"confusion matrix\\n\",cm)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T20:31:52.137231Z","iopub.execute_input":"2024-06-26T20:31:52.137481Z","iopub.status.idle":"2024-06-26T20:31:52.152584Z","shell.execute_reply.started":"2024-06-26T20:31:52.137432Z","shell.execute_reply":"2024-06-26T20:31:52.151635Z"},"trusted":true},"execution_count":199,"outputs":[{"name":"stdout","text":"confusion matrix\n [[4452 1351]\n [ 865 3332]]\n","output_type":"stream"}]},{"cell_type":"markdown","source":"### Despite the 10% noise, the model still demonstrates a relatively good ability to classify both positive and negative instances correctly. The presence of noise likely increased the misclassification rates, but the overall performance remains reasonably robust.","metadata":{}},{"cell_type":"code","source":"# visualize the confusion matrix\n\ncm_norm = np.around(cm.astype('float') / cm.sum(axis=1)[:, np.newaxis], decimals=2)\n\ncm_df = pd.DataFrame(cm_norm,\n                 index = [0,1], \n                 columns =[0,1])\n\nfigure = plt.figure(figsize=(4, 4))\nsns.heatmap(cm_df, annot=True, cmap=plt.cm.Blues)\nplt.tight_layout()\nplt.ylabel('True label')\nplt.xlabel('Predicted label')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-06-26T20:31:52.153807Z","iopub.execute_input":"2024-06-26T20:31:52.154371Z","iopub.status.idle":"2024-06-26T20:31:52.457223Z","shell.execute_reply.started":"2024-06-26T20:31:52.154331Z","shell.execute_reply":"2024-06-26T20:31:52.456681Z"},"trusted":true},"execution_count":200,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 288x288 with 2 Axes>","image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":"# Precision, Recall, and F1-Score\n\ntp = cm[0][0]\nfn = cm[0][1]\n\ntn = cm[1][1]\nfp = cm[1][0]\n\nrecall = round(tp / (tp+fn), 2)\nprecision = round(tp / (tp+fp), 2)\nf1score = (2*precision*recall) / (precision + recall)\n\nprint(\"recall score:\", recall)\nprint(\"precision score:\", precision)\nprint(\"F1-Score:\",f1score)","metadata":{"execution":{"iopub.status.busy":"2024-06-26T20:31:52.458326Z","iopub.execute_input":"2024-06-26T20:31:52.458775Z","iopub.status.idle":"2024-06-26T20:31:52.467179Z","shell.execute_reply.started":"2024-06-26T20:31:52.458734Z","shell.execute_reply":"2024-06-26T20:31:52.466187Z"},"trusted":true},"execution_count":201,"outputs":[{"name":"stdout","text":"recall score: 0.77\nprecision score: 0.84\nF1-Score: 0.8034782608695653\n","output_type":"stream"}]},{"cell_type":"markdown","source":"### an F1-score of 0.803 with 10% noisy labels indicates that the model is performing well and is robust against a moderate level of label noise. It's a positive sign that the model can generalize effectively despite imperfect data.","metadata":{}}]}